<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Allo项目初探</title>
    <url>/2025/03/29/Allo%E9%A1%B9%E7%9B%AE%E5%88%9D%E6%8E%A2/</url>
    <content><![CDATA[<p><img src="/images/image-20250330205827771.png" alt="image-20250330205827771"></p>
<span id="more"></span>
<h2 id="项目构建"><a href="#项目构建" class="headerlink" title="项目构建"></a><font color = brown>项目构建</font></h2><p>主要参考<a href="https://cornell-zhang.github.io/allo/setup/index.html">Allo doc</a>的set up章节，这里我选择源码构建的方式。项目构建流程如下：</p>
<ol>
<li><p>clone项目</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone --recursive git@github.com:micropuma/allo.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>构建llvm子项目</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd allo/externals/llvm-project</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Apply our patch</span></span><br><span class="line">git apply ../llvm_patch</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Python 3.12 is required</span></span><br><span class="line">mkdir -p build</span><br></pre></td></tr></table></figure>
<p>由于需要python bind11，以及后续需要pip install很多python库，因此这里推荐用conda创建虚拟环境：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda create -n allo python=3.12         # python版本一定是3.12</span><br><span class="line">conda activate allo</span><br><span class="line">pip install pybind11</span><br></pre></td></tr></table></figure>
<p>编写shell脚本，一键构建llvm：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd build</span><br><span class="line">cmake -G Ninja ../llvm \</span><br><span class="line">    -DLLVM_ENABLE_PROJECTS=&quot;clang;mlir;openmp&quot; \</span><br><span class="line">    -DLLVM_BUILD_EXAMPLES=ON \</span><br><span class="line">    -DLLVM_TARGETS_TO_BUILD=&quot;host&quot; \</span><br><span class="line">    -DCMAKE_BUILD_TYPE=Release \</span><br><span class="line">    -DLLVM_ENABLE_ASSERTIONS=ON \</span><br><span class="line">    -DLLVM_INSTALL_UTILS=ON \</span><br><span class="line">    -DMLIR_ENABLE_BINDINGS_PYTHON=ON \</span><br><span class="line">    -DPython3_EXECUTABLE=`which python3`</span><br><span class="line">ninja -j $(nproc)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">export</span> environment variable</span></span><br><span class="line">export LLVM_BUILD_DIR=$(pwd)</span><br></pre></td></tr></table></figure>
</li>
<li><p>构建Allo项目，首先回退到项目根目录，运行如下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 -m pip install -v -e . -i https://pypi.tuna.tsinghua.edu.cn/simple  # 建议用清华镜像，否则容易拉取失败</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a><font color = brown>参考资料</font></h2><ol>
<li><a href="https://cornell-zhang.github.io/allo/">Allo doc</a></li>
<li><a href="http://arxiv.org/abs/2404.04815">Allo paper</a></li>
<li><a href="https://github.com/cornell-zhang/allo">Allo project</a></li>
</ol>
]]></content>
      <categories>
        <category>编译技术</category>
        <category>机器学习编译</category>
        <category>mlir</category>
      </categories>
      <tags>
        <tag>机器学习编译器</tag>
        <tag>mlir</tag>
        <tag>异构计算系统</tag>
      </tags>
  </entry>
  <entry>
    <title>算子融合实战</title>
    <url>/2025/03/29/%E7%AE%97%E5%AD%90%E8%9E%8D%E5%90%88%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<p><img src="./images/bladedisc1.png" alt=""></p>
<span id="more"></span>
]]></content>
      <categories>
        <category>编译技术</category>
        <category>机器学习编译</category>
        <category>mlir</category>
      </categories>
      <tags>
        <tag>机器学习编译器</tag>
        <tag>mlir</tag>
        <tag>算子融合技术</tag>
      </tags>
  </entry>
</search>
